/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import java.awt.*;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;

/**
 *
 * @author jamiechoi
 */
public class SearchMovie extends javax.swing.JFrame {

    /**
     * Creates new form SearchMovie
     */
    DefaultTableModel model;
    DefaultTableModel model2;
    
    public SearchMovie() {
        initComponents();
        jTable_Movie.setRowHeight(40);
        jTable_Movie.setShowGrid(true);
        jTable_Movie.setGridColor(Color.yellow);
        jTable_Movie.setSelectionBackground(Color.black);
        setMoviesToTable();
        
    }
    
        public void setMoviesToTable(){
        try {
            Class.forName("org.postgresql.Driver");
            Connection con = DriverManager.getConnection("jdbc:postgresql://localhost:5432/moviedb", "postgres", "Mm1008mm!!");
            
            if (con != null) {
                System.out.println("Connection Established!");
            } else {
                System.out.println("Connection failed");
            }
            
            String sql = "SELECT movie.title, description, releaseDate, removalDate, isAvailable, isan, COALESCE(x.totalsale,0) AS totalticketsales\n" +
"FROM movie \n" +
"	LEFT JOIN (\n" +
"		SELECT movie.title, count(*) AS totalsale\n" +
"		FROM movie\n" +
"		JOIN showtime ON(movie.id = showtime.movieid)\n" +
"		JOIN ticketsale ON (showtime.id = ticketsale.showtimeid)\n" +
"		GROUP BY movie.title\n" +
"	) as X on movie.title = X.title\n" +
"ORDER BY totalsale";
            PreparedStatement pst = con.prepareStatement(sql);
            ResultSet rs = pst.executeQuery();

            while(rs.next()){
                var title = rs.getString("title");
                var description = rs.getString("description");
                var releaseDate = rs.getString("releaseDate");
                var removalDate = rs.getString("removalDate");
                Boolean isAvailable = rs.getBoolean("isAvailable");
                var isan = rs.getString("isan");
                Integer totalTicketSales = rs.getInt("totalticketsales");
                
                Object[] obj = {title, description, releaseDate, removalDate, isAvailable, isan, totalTicketSales};
                model = (DefaultTableModel) jTable_Movie.getModel();
                model.addRow(obj);
            }
            
        } catch (Exception e){
            e.printStackTrace();
        }
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel_Background = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable_Movie = new javax.swing.JTable();
        jLabel_SearchMovie = new javax.swing.JLabel();
        jLabel_SearchByTitle = new javax.swing.JLabel();
        txt_SearchByTitle = new javax.swing.JTextField();
        txt_SearchByReleaseDate = new javax.swing.JTextField();
        jLabel_SearchByReleaseDate = new javax.swing.JLabel();
        jLabel_SearchByTicketSales = new javax.swing.JLabel();
        txt_SearchByTicketSales = new javax.swing.JTextField();
        jLabel_SearchByAvailability = new javax.swing.JLabel();
        txt_SearchByAvailability = new javax.swing.JTextField();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {
                        {null, null, null, null},
                        {null, null, null, null},
                        {null, null, null, null},
                        {null, null, null, null}
                },
                new String [] {
                        "Title 1", "Title 2", "Title 3", "Title 4"
                }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

//        jPanel_Background.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable_Movie.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {

                },
                new String [] {
                        "Title", "Description", "Release Date", "Removal Date", "Is Available", "ISAN", "TotalTicketSales"
                }
        ) {
            Class[] types = new Class [] {
                    java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Boolean.class, java.lang.String.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTable_Movie);

        jLabel_SearchMovie.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel_SearchMovie.setText("Search Movie");

        jLabel_SearchByTitle.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel_SearchByTitle.setText("Search By Title: ");

        txt_SearchByTitle.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txt_SearchByTitle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_SearchByTitleActionPerformed(evt);
            }
        });
        txt_SearchByTitle.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_SearchByTitleKeyReleased(evt);
            }
        });

        txt_SearchByReleaseDate.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txt_SearchByReleaseDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_SearchByReleaseDateActionPerformed(evt);
            }
        });
        txt_SearchByReleaseDate.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_SearchByReleaseDateKeyReleased(evt);
            }
        });

        jLabel_SearchByReleaseDate.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel_SearchByReleaseDate.setText("Search By Release Date: ");

        jLabel_SearchByTicketSales.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel_SearchByTicketSales.setText("Search By Ticket Sales: ");

        txt_SearchByTicketSales.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txt_SearchByTicketSales.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_SearchByTicketSalesActionPerformed(evt);
            }
        });
        txt_SearchByTicketSales.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_SearchByTicketSalesKeyReleased(evt);
            }
        });

        jLabel_SearchByAvailability.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel_SearchByAvailability.setText("Search By Availability: ");

        txt_SearchByAvailability.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txt_SearchByAvailability.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_SearchByAvailabilityActionPerformed(evt);
            }
        });
        txt_SearchByAvailability.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_SearchByAvailabilityKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGap(124, 206, Short.MAX_VALUE)
                                .addComponent(jPanel_Background, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(1703, 1703, 1703))
                        .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(38, 38, 38)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                                .addComponent(jLabel_SearchByTicketSales)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                .addComponent(txt_SearchByTicketSales, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                                .addComponent(jLabel_SearchByAvailability)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                .addComponent(txt_SearchByAvailability, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                                                .addComponent(jLabel_SearchByReleaseDate)
                                                                                .addGap(18, 18, 18))
                                                                        .addGroup(layout.createSequentialGroup()
                                                                                .addComponent(jLabel_SearchByTitle)
                                                                                .addGap(95, 95, 95)))
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                                        .addComponent(txt_SearchByTitle)
                                                                        .addComponent(txt_SearchByReleaseDate, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(182, 182, 182)
                                                .addComponent(jLabel_SearchMovie, javax.swing.GroupLayout.PREFERRED_SIZE, 373, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1085, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jPanel_Background, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(95, 95, 95)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel_SearchMovie, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(jLabel_SearchByTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(txt_SearchByTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(jLabel_SearchByReleaseDate, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(txt_SearchByReleaseDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(jLabel_SearchByAvailability, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(txt_SearchByAvailability, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(jLabel_SearchByTicketSales, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(txt_SearchByTicketSales, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(657, 657, 657))
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 620, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        setBounds(0, 0, 1909, 1119);
    }// </editor-fold>


    private void txt_SearchByTitleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_SearchByTitleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_SearchByTitleActionPerformed

    private void txt_SearchByTitleKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_SearchByTitleKeyReleased
        String searchString = txt_SearchByTitle.getText();
        search(searchString);
    }//GEN-LAST:event_txt_SearchByTitleKeyReleased

    private void txt_SearchByTicketSalesKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_SearchByTicketSalesKeyReleased
        String searchString = txt_SearchByTicketSales.getText();
        search(searchString);
    }//GEN-LAST:event_txt_SearchByTicketSalesKeyReleased

    private void txt_SearchByTicketSalesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_SearchByTicketSalesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_SearchByTicketSalesActionPerformed

    private void txt_SearchByReleaseDateKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_SearchByReleaseDateKeyReleased
        String searchString = txt_SearchByReleaseDate.getText();
        search(searchString);
    }//GEN-LAST:event_txt_SearchByReleaseDateKeyReleased

    private void txt_SearchByReleaseDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_SearchByReleaseDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_SearchByReleaseDateActionPerformed

    private void txt_SearchByAvailabilityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_SearchByAvailabilityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_SearchByAvailabilityActionPerformed

    private void txt_SearchByAvailabilityKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_SearchByAvailabilityKeyReleased
        String searchString = txt_SearchByAvailability.getText();
        search(searchString);
    }//GEN-LAST:event_txt_SearchByAvailabilityKeyReleased

    public void search(String str) {
        model = (DefaultTableModel) jTable_Movie.getModel();
        TableRowSorter<DefaultTableModel> trs = new TableRowSorter<>(model);
        jTable_Movie.setRowSorter(trs);
        trs.setRowFilter(RowFilter.regexFilter(str));
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SearchMovie.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SearchMovie.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SearchMovie.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SearchMovie.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SearchMovie().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel_SearchByAvailability;
    private javax.swing.JLabel jLabel_SearchByReleaseDate;
    private javax.swing.JLabel jLabel_SearchByTicketSales;
    private javax.swing.JLabel jLabel_SearchByTitle;
    private javax.swing.JLabel jLabel_SearchMovie;
    private javax.swing.JPanel jPanel_Background;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable_Movie;
    private javax.swing.JTextField txt_SearchByAvailability;
    private javax.swing.JTextField txt_SearchByReleaseDate;
    private javax.swing.JTextField txt_SearchByTicketSales;
    private javax.swing.JTextField txt_SearchByTitle;
    // End of variables declaration//GEN-END:variables
}
