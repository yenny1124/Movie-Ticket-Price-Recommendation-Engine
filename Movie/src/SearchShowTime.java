/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import java.awt.*;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;

/**
 *
 * @author jamiechoi
 */
public class SearchShowTime extends javax.swing.JFrame {

    /**
     * Creates new form SearchShowTime
     */
    
    DefaultTableModel model;
        
    public SearchShowTime() {
        initComponents();
        jTable_Movie.setRowHeight(40);
        jTable_Movie.setShowGrid(true);
        jTable_Movie.setGridColor(Color.yellow);
        jTable_Movie.setSelectionBackground(Color.black);
        
        showMoviesByDate("","");
    }
    
    public void showMoviesByDate(String d1, String d2) {
        try {
            Class.forName("org.postgresql.Driver");
            Connection con = DriverManager.getConnection("jdbc:postgresql://localhost:5432/moviedb", "postgres", "Mm1008mm!!");
            
        PreparedStatement pst;
        ResultSet rs;
            
        try{
                // if no date selected display all data
                if(d1.equals("") || d2.equals("")){
                                     String sql = "SELECT showtime.date, showtime.starttime, showtime.endtime, movie.title, auditorium.number\n" +
"FROM showtime\n" +
"LEFT JOIN movie ON (movie.id = showtime.movieid)\n" +
"LEFT JOIN auditorium ON (showtime.auditoriumid = auditorium.id)\n" +
"GROUP BY date, starttime, endtime, title, number\n" +
"ORDER BY date";
            pst = con.prepareStatement(sql);
            
                }else{
                     pst = con.prepareStatement("SELECT showtime.date, showtime.starttime, showtime.endtime, movie.title, auditorium.number\n" +
"FROM showtime\n" +
"LEFT JOIN movie ON (movie.id = showtime.movieid)\n" +
"LEFT JOIN auditorium ON (showtime.auditoriumid = auditorium.id)\n" +
"GROUP BY date, starttime, endtime, title, number\n" +
"WHERE date BETWEEN '"+d1+"' AND '"+d2+"'\n" +
"ORDER BY date");
                     pst.setString(1, d1);
                     pst.setString(2, d2);
                }
           
            rs = pst.executeQuery();
            DefaultTableModel model = (DefaultTableModel)jTable_Movie.getModel();
            while(rs.next()){
                
                var date = rs.getString("date");
                var starttime = rs.getString("starttime");
                var endtime = rs.getString("endtime");
                var title = rs.getString("title");
                Integer auditoriumnumber = rs.getInt("number");
                
                Object[] obj = {date, starttime, endtime, title, auditoriumnumber};
                model = (DefaultTableModel) jTable_Movie.getModel();
                model.addRow(obj);
            }
            
        } catch (Exception e){
            e.printStackTrace();
        }
    } catch (Exception e) {
        e.printStackTrace();
    }
 }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable_Movie = new javax.swing.JTable();
        jLabel_SearchShowTime = new javax.swing.JLabel();
        jLabel_SearchByStartTime = new javax.swing.JLabel();
        txt_SearchByEndTime = new javax.swing.JTextField();
        jLabel_SearchByEndTime = new javax.swing.JLabel();
        txt_SearchByStartTime = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable_Movie.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {

                },
                new String [] {
                        "Date", "Start Time", "End Time", "Movie Title", "Auditorium Number"
                }
        ) {
            Class[] types = new Class [] {
                    java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTable_Movie);

        jLabel_SearchShowTime.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel_SearchShowTime.setText("Search ShowTime");

        jLabel_SearchByStartTime.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel_SearchByStartTime.setText("Search By StartTime: ");

        txt_SearchByEndTime.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txt_SearchByEndTime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_SearchByEndTimeActionPerformed(evt);
            }
        });
        txt_SearchByEndTime.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_SearchByEndTimeKeyReleased(evt);
            }
        });

        jLabel_SearchByEndTime.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel_SearchByEndTime.setText("Search By EndTime: ");

        txt_SearchByStartTime.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txt_SearchByStartTime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_SearchByStartTimeActionPerformed(evt);
            }
        });
        txt_SearchByStartTime.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_SearchByStartTimeKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(94, 94, 94)
                                                .addComponent(jLabel_SearchShowTime, javax.swing.GroupLayout.PREFERRED_SIZE, 373, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(27, 27, 27)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jLabel_SearchByStartTime)
                                                        .addComponent(jLabel_SearchByEndTime))
                                                .addGap(18, 18, 18)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(txt_SearchByEndTime, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(txt_SearchByStartTime, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addContainerGap(1169, Short.MAX_VALUE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                        .addGap(529, 529, 529)
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 1085, Short.MAX_VALUE)
                                        .addGap(43, 43, 43)))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addComponent(jLabel_SearchShowTime, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel_SearchByStartTime, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txt_SearchByStartTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel_SearchByEndTime, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txt_SearchByEndTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(532, Short.MAX_VALUE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                        .addGap(58, 58, 58)
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 620, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addContainerGap(58, Short.MAX_VALUE)))
        );

        setSize(new java.awt.Dimension(1657, 764));
        setLocationRelativeTo(null);
    }//

    private void txt_SearchByEndTimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_SearchByEndTimeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_SearchByEndTimeActionPerformed

    private void txt_SearchByEndTimeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_SearchByEndTimeKeyReleased
        String searchString = txt_SearchByEndTime.getText();
        search(searchString);
    }//GEN-LAST:event_txt_SearchByEndTimeKeyReleased

    private void txt_SearchByStartTimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_SearchByStartTimeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_SearchByStartTimeActionPerformed

    private void txt_SearchByStartTimeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_SearchByStartTimeKeyReleased
        String searchString = txt_SearchByStartTime.getText();
        search(searchString);
    }//GEN-LAST:event_txt_SearchByStartTimeKeyReleased

        public void search(String str) {
        model = (DefaultTableModel) jTable_Movie.getModel();
        TableRowSorter<DefaultTableModel> trs = new TableRowSorter<>(model);
        jTable_Movie.setRowSorter(trs);
        trs.setRowFilter(RowFilter.regexFilter(str));
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SearchShowTime.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SearchShowTime.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SearchShowTime.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SearchShowTime.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SearchShowTime().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel_SearchByEndTime;
    private javax.swing.JLabel jLabel_SearchByStartTime;
    private javax.swing.JLabel jLabel_SearchShowTime;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable_Movie;
    private javax.swing.JTextField txt_SearchByEndTime;
    private javax.swing.JTextField txt_SearchByStartTime;
    // End of variables declaration//GEN-END:variables
}
